package routines;

import routines.system.StringUtils;

 
 
 
public class NotificationTemplates {
	  private static final String header			=		"<html> <head> <style> table { width:60%; } table, th, td { border: 1px solid black; " 
		  													+" border-collapse: collapse; } th, td { padding: 2px; text-align: left; " 
		  													+"font-size:15px; } table.names tr:nth-child(even) { background-color: #eee; } "  
		  													+"table.names tr:nth-child(odd) { background-color:#fff; } table.names th	{ " 
		  													+"background-color: #666633; color: white } </style> </head><body>" ;
	  private static final String tabStartNode		=		"<table class='names'>";
	  private static final String tabEndNode		=		"</table>";
	  private static final String paraStartNode		=		"<p>";
	  private static final String paraEndNode		=		"</p>";
	  private static final String ccaBoyMessage		=		"<p>This an automated email from CCA integration platform.</p>";
	  private static final String bodyMessage		=		"<p>This an automated email from CCA integration platform.</p><p> The following   eligibility files is processed in to Scion FTP site. </p>" ;
	  private static final String tableHeader		=		"<tr><th>FileName</th><th>RowCount</th></tr>";
	  private static final String footerMessage		=		"<p>Please do not reply to this e-mail.</p></body></html>";
	  public static final  String email_from		=		"ccaintegration@commonwealthcare.org";
	  public static final  String  email_server  	=       "10.253.0.21";
	  public static final  String email_server_port	=       "25";
	  private static final  String email_base_type	=       "BASE";
	  private static final  String email_grid_type	=       "GRID";

       
    
    public static String  gridTemplate(String bodyMsg, String tabHeader,String tabValue){
    	return  header + (Relational.ISNULL(bodyMsg)? bodyMessage : bodyMsg)+tabStartNode+(Relational.ISNULL(tabHeader)||("").equals(tabHeader)? tableHeader : tabHeader)+tabValue+tabEndNode+footerMessage;   
       }
    
    public static String  gridTemplate2(String bodyMsg, String tabHeader,String tabValue){
    	return  header+ccaBoyMessage+paraStartNode + (Relational.ISNULL(bodyMsg)? bodyMessage : bodyMsg)+tabStartNode+(Relational.ISNULL(tabHeader)||("").equals(tabHeader)? tableHeader : tabHeader)+tabValue+tabEndNode+paraEndNode+footerMessage;  
       }
    
    public static String  baseTemplate(String bodyMsg){
    	return  header+ccaBoyMessage+paraStartNode + (Relational.ISNULL(bodyMsg)? bodyMessage : bodyMsg)+paraEndNode+footerMessage;   
       }
    
    
    
    public static String sendEmail(String MessageType, String bodyMsg, String tabHeader,String tabValue){
    	
    	  if (  (StringHandling.UPCASE(MessageType)). equals(email_grid_type)){
    		  return  gridTemplate2(bodyMsg,tabHeader,  tabValue);
    	 } else{
    		return baseTemplate(bodyMsg);
    		 
    	 }
    	
    }           
 
}
