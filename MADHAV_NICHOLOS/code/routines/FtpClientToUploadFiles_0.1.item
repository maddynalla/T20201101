package routines;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.PrintWriter;

import org.apache.commons.net.PrintCommandListener;
import org.apache.commons.net.ftp.FTP;
import org.apache.commons.net.ftp.FTPFile;
import org.apache.commons.net.ftp.FTPReply;
import org.apache.commons.net.ftp.FTPSClient;

public class FtpClientToUploadFiles {

	public static void FtpConnectionupload(String server, String username, String password, String remoteFile, String localFile,String suffix) {
    
		
		System.setProperty("javax.net.debug", "ssl");
		/*String server = "ftps.ctstransit.com";
		String username = "CCA";
		String password = "D!$claimeR";t
		String remoteFile = "/INBOX to CTS/";
		String localFile = "E:/FTPS/";*/
		String protocol = "SSL";
		int port = 990;
		int timeoutInMillis = 10000;
		boolean isImpicit = true;
		try {
			FTPSClient client = new FTPSClient(protocol, isImpicit);
			client.setDataTimeout(timeoutInMillis);
			client.addProtocolCommandListener(new PrintCommandListener(
					new PrintWriter(System.out)));
			System.out
					.println("################ Connecting to Server ################################");
			int reply;
			System.out
					.println("################ Connect Call ################################");
			client.connect(server, port);
			client.login(username, password);
			System.out
					.println("################ Login Success ################################");
			client.setFileType(FTP.NON_PRINT_TEXT_FORMAT);
			client.execPBSZ(0);
			client.execPROT("P");
			client.enterLocalPassiveMode();
			System.out.println("Connected to " + server + ".");
			String filename = "";
			File file = new File(localFile);

			if (file.isDirectory()) {
				File[] files = file.listFiles();
				for (int i = 0; i < files.length; i++) {
					filename = files[i].getName();
					
					if (filename.endsWith(suffix)) {

						BufferedInputStream bis = new BufferedInputStream(
								new FileInputStream(localFile + filename));
						client.storeFile(remoteFile+filename, bis);
						
					}
				}
			}
			

			reply = client.getReplyCode();
			if (!FTPReply.isPositiveCompletion(reply)) {
				client.disconnect();
				System.err.println("FTP server refused connection.");
				System.exit(1);
			}

			client.logout();
		} catch (Exception e) {
			System.err.println("Could not connect to server.");
			e.printStackTrace();
			return;
		}
	}

}
